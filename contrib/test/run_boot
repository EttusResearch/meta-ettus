#!/usr/bin/env python3

from serial import Serial
import sys
import io
import time
from enum import IntEnum
from utils import check_open_filehandles
from utils import remove_ansi
from utils import remove_ansi2
from utils import get_config

class UBootState(IntEnum):
    Idle = 0
    UbootSplStarted = 1
    UbootStarted = 2
    PromptEntered = 3
    WaitForNetwork = 4
    SetServerIP = 5
    SetNfsRoot = 6
    SetTftpRoot = 7
    SetFitImage = 8
    RunBoot = 9
    BootCmdSent = 10

def main(config):

    try:
        check_open_filehandles(config['stm_uart'])
        stm_uart = Serial(config['stm_uart'], 115200, timeout=config['default_timeout'])
        check_open_filehandles(config['zynq_uart'])
        zynq_uart = Serial(config['zynq_uart'], 115200, timeout=config['default_timeout'])
    except Exception as inst:
        print(inst)
        exit(1)

    stm_uart.write(b"reboot\n")

    time.sleep(0.5)

    stm_uart.write(config['stm_start_command'].encode()+b"\n")

    f = open(config['boot_logfile'], "w")

    timeout=0
    uboot_state=UBootState(0)
    login_detected=False
    ifconfig_sent=False
    while True:
        line_bytes = zynq_uart.readline()
        try:
            line_utf8 = line_bytes.decode("utf-8")
            line = remove_ansi2(remove_ansi(line_utf8))
        except:
            print("*** unhandled characters - original line: ", end='')
            print(line_bytes)
            line_utf8 = remove_ansi2(remove_ansi(line_bytes.decode("utf-8", errors='ignore')))
            line = line_utf8

        if len(line_utf8)>0:
            print(line_utf8, end='')
            f.write(line)
            timeout = 0
        else:
            timeout += config['default_timeout']

        if uboot_state == UBootState.Idle:
            if line_utf8.startswith("U-Boot SPL"):
                uboot_state = UBootState.UbootSplStarted
        elif uboot_state == UBootState.UbootSplStarted:
            if line_utf8.startswith("U-Boot"):
                uboot_state = UBootState.UbootStarted
        elif uboot_state == UBootState.UbootStarted:
            if line_utf8.startswith("Hit any key"):
                zynq_uart.write(b"q")
                uboot_state = UBootState.PromptEntered

            if line_utf8.startswith("Enter 'noautoboot'"):
                zynq_uart.write(b"noautoboot")
                uboot_state = UBootState.PromptEntered
        elif (uboot_state >= UBootState.PromptEntered) and (uboot_state < UBootState.BootCmdSent):
            if line_utf8.startswith(config['prompt']):
                if uboot_state == UBootState.PromptEntered:
                    zynq_uart.write(b"# prompt entered\n")
                if uboot_state == UBootState.WaitForNetwork:
                    # wait until network is up
                    zynq_uart.write(b"# wait for network\n")
                    time.sleep(1.5)
                elif uboot_state == UBootState.SetServerIP:
                    zynq_uart.write(b"setenv serverip "+config['serverip'].encode("utf-8")+b"\n")
                elif uboot_state == UBootState.SetNfsRoot:
                    zynq_uart.write(b"setenv nfsroot "+config['nfsroot'].encode("utf-8")+b"\n")
                elif uboot_state == UBootState.SetTftpRoot:
                    zynq_uart.write(b"setenv tftproot "+config['tftproot'].encode("utf-8")+b"\n")
                elif uboot_state == UBootState.SetFitImage:
                    zynq_uart.write(b"setenv fit_image "+config['fit_image'].encode("utf-8")+b"\n")
                elif uboot_state == UBootState.RunBoot:
                    zynq_uart.write(b"run "+config['modeboot'].encode("utf-8")+b"\n")
                uboot_state = UBootState(uboot_state.value + 1)
        elif uboot_state == UBootState.BootCmdSent:
            if line_utf8.startswith(config['prompt']):
                # boot command was sent but the u-boot prompt appeared again means
                # that the boot procedure was not successful
                break

            if line_utf8.find(" login: ") != -1:
                zynq_uart.write(b"root\n")
                login_detected = True

            if line.startswith("root@") and ":~# " in line and not ifconfig_sent:
                zynq_uart.write(b"dmesg --console-off\n")
                zynq_uart.write(b"ifconfig eth0\n")
                zynq_uart.write(b"dmesg --console-on\n")
                ifconfig_sent = True

            if not login_detected and timeout>1:
                zynq_uart.write(b"\n")

        if timeout>config['boot_timeout']:
            break

    if ifconfig_sent:
        print("\n\n*** Boot was successful ***")
    else:
        print("\n\n*** Boot was not successful, aborting ***")
        print("*** U-Boot state: {} ***".format(uboot_state.name))
        exit(1)

if __name__ == "__main__":
    config = get_config(sys.argv)
    main(config)
