From 3072454d82b58ede9be80c29ba8514f9bc02e7a5 Mon Sep 17 00:00:00 2001
From: Moritz Fischer <moritz.fischer@ettus.com>
Date: Tue, 10 Nov 2015 14:11:44 -0800
Subject: [PATCH 4/4] zynq: e3xx: Started working on memtest (broken)

Signed-off-by: Moritz Fischer <moritz.fischer@ettus.com>
---
 board/ettus/e3xx/board.c           | 80 +++++++++++++++++++++++++++++++++-----
 include/configs/zynq_e3xx_common.h |  4 ++
 2 files changed, 75 insertions(+), 9 deletions(-)

diff --git a/board/ettus/e3xx/board.c b/board/ettus/e3xx/board.c
index b1d0ea58..689c542 100644
--- a/board/ettus/e3xx/board.c
+++ b/board/ettus/e3xx/board.c
@@ -82,6 +82,47 @@ static const u8 e3xx_mb_speedgrades[] = {
 	[MB_ID_E3XX_REVD] = 3,
 };
 
+static void setup_i2c(void)
+{
+	i2c_init(0,0);
+	i2c_set_bus_num(0);
+}
+
+#ifdef CONFIG_ZYNQ_E3XX_MEM_TEST
+/* Memory test with two parts:
+ * 1) Check data bits are valid
+ * 2) Write a test pattern to RAM and check the read back values. This should
+ * catch bad / stuck address lines.
+ */
+static const u32 test_patterns[7] = {0x5555AAAA, 0xAAAA5555, 0x5A5AA5A5, 0xA5A55A5A,
+			0xF0F00F0F, 0x0F0FF0F0, 0x0000FFFF};
+
+static int mem_test(u32 start, u32 size)
+{
+	u32* address;
+	u32 i;
+
+	return 0;
+
+	/* Walking 1s pattern on a single address */
+	address = (u32*)start;
+	for (i = 0; i < 8*sizeof(u32); i++) {
+		*address = 1 << i;
+		if (*address != 1 << i) {
+			return -1;
+		}
+	}
+
+	/* Check test pattern */
+	for (i = start; i < size/sizeof(u32); i++) {
+		if (address[i] != test_patterns[i & 0x7])
+			return -1;
+	}
+
+	return 0;
+}
+#endif /* CONFIG_ZYNQ_E3XX_MEM_TEST */
+
 static void identify_products(void)
 {
 	u8 db_buf[sizeof(struct e3xx_db_eeprom_map)];
@@ -96,9 +137,7 @@ static void identify_products(void)
 	struct e3xx_mb_eeprom_map *mb_map =
 		(struct e3xx_mb_eeprom_map*) &mb_buf[0];
 
-	i2c_init(0,0);
-
-	i2c_set_bus_num(0);
+	setup_i2c();
 
 	if (i2c_probe(E3XX_I2C_MB_EEPROM_ADDR) != 0) {
 		printf("Couldn't find i2c mb eeprom\n");
@@ -123,6 +162,11 @@ static void identify_products(void)
 	};
 	db = ntohs(db_map->hw_product);
 
+	/*for (size_t i = 0; i < sizeof(struct e3xx_db_eeprom_map); i++) {
+		printf("%u %x\n", i, db_buf[i]);
+	}
+	*/
+
 	/* print out motherboard info */
 	if (mb == MB_ID_E3XX_REVC) {
 		printf("Found %s - Speedgrade %u\n",
@@ -142,33 +186,37 @@ static void identify_products(void)
 	/* print out daughterboard info and select correct image */
 	if (speedgrade == 1) {
 		if (db == DB_ID_E310_REVB) {
+			printf("Found %s\n", e3xx_db_names[DB_ID_E310_REVB]);
 			setenv("e3xx_type", "e31x_1");
 		} else if (db == DB_ID_E310_REVC) {
 			setenv("e3xx_type", "e31x_1");
+			printf("Found %s\n", e3xx_db_names[DB_ID_E310_REVC]);
 		} else if (db == DB_ID_E300_REVB) {
 			setenv("e3xx_type", "e31x_1");
+			printf("Found %s\n", e3xx_db_names[DB_ID_E300_REVB]);
 		} else if (db == DB_ID_E330_REVC) {
 			setenv("e3xx_type", "e33x_1");
+			printf("Found %s\n", e3xx_db_names[DB_ID_E330_REVC]);
 		} else {
 			setenv("e3xx_type", "e33x_1");
-			printf("*** Found unknown daughterboard, please update sd card ***\n");
+			printf("*** Found unknown daughterboard, 0x%04x please update sd card ***\n", db);
 		}
 	} else if (speedgrade == 3) {
 		if (db == DB_ID_E310_REVB) {
 			setenv("e3xx_type", "e31x_3");
-			//printf("Found %s\n", e3xx_db_names[DB_ID_E310_REVB]);
+			printf("Found %s\n", e3xx_db_names[DB_ID_E310_REVB]);
 		} else if (db == DB_ID_E310_REVC) {
 			setenv("e3xx_type", "e31x_3");
-			//printf("Found %s\n", e3xx_db_names[DB_ID_E310_REVC]);
+			printf("Found %s\n", e3xx_db_names[DB_ID_E310_REVC]);
 		} else if (db == DB_ID_E300_REVB) {
 			setenv("e3xx_type", "e31x_3");
-			//printf("Found %s\n", e3xx_db_names[DB_ID_E300_REVB]);
+			printf("Found %s\n", e3xx_db_names[DB_ID_E300_REVB]);
 		} else if (db == DB_ID_E330_REVC) {
 			setenv("e3xx_type", "e33x_3");
-			//printf("Found %s\n", e3xx_db_names[DB_ID_E330_REVC]);
+			printf("Found %s\n", e3xx_db_names[DB_ID_E330_REVC]);
 		} else {
 			setenv("e3xx_type", "e31x_3");
-			printf("*** Found unknown daughterboard, please update sd card ***\n");
+			printf("*** Found unknown daughterboard, 0x%04x please update sd card ***\n", db);
 		}
 	}
 
@@ -224,6 +272,8 @@ int board_init(void)
 
 int board_late_init(void)
 {
+	int err;
+
 	switch ((zynq_slcr_get_boot_mode()) & ZYNQ_BM_MASK) {
 	case ZYNQ_BM_NOR:
 		setenv("modeboot", "norboot");
@@ -241,6 +291,18 @@ int board_late_init(void)
 
 	identify_products();
 
+#ifdef CONFIG_ZYNQ_E3XX_MEM_TEST
+	printf("RAM test... ");
+
+	err = mem_test(CONFIG_ZYNQ_E3XX_MEM_TEST_START,
+		       CONFIG_ZYNQ_E3XX_MEM_TEST_SIZE);
+	if (err) {
+		printf("FAILED RAM TEST!\n");
+		setenv("bootdelay","-1");
+	} else
+		printf("PASSED RAM TEST!\n");
+#endif /* CONFIG_ZYNQ_E3XX_MEM_TEST */
+
 	return 0;
 }
 
diff --git a/include/configs/zynq_e3xx_common.h b/include/configs/zynq_e3xx_common.h
index 2c5fe1b..91da37c 100644
--- a/include/configs/zynq_e3xx_common.h
+++ b/include/configs/zynq_e3xx_common.h
@@ -9,6 +9,10 @@
 #ifndef __CONFIG_ZYNQ_E3XX_COMMON_H
 #define __CONFIG_ZYNQ_E3XX_COMMON_H
 
+#define CONFIG_ZYNQ_E3XX_MEM_TEST
+#define CONFIG_ZYNQ_E3XX_MEM_TEST_START CONFIG_SYS_SDRAM_BASE
+#define CONFIG_ZYNQ_E3XX_MEM_TEST_SIZE 0x00001000
+
 /* we'll need to overridedefault zynq stuff */
 #ifdef CONFIG_EXTRA_ENV_SETTINGS
 #undef CONFIG_EXTRA_ENV_SETTINGS
-- 
2.4.3

