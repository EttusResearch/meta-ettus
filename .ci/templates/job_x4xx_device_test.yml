jobs:

  - job: 'test'
    timeoutInMinutes: 180
    strategy:
      matrix: $[ variables.Devices ]

    workspace:
      clean: all

    steps:
    - checkout: self
      path: meta-ettus-dev
      displayName: 'Checkout meta-ettus-dev'

    - download: x4xx-uhddev-oe-build-artifacts
      artifact: 'IPK files'
      displayName: 'Download IPK files'

    - template: steps_load_image.yml
    - template: steps_mount_image.yml
    - template: steps_run_boot.yml

    - script: $(ScriptDir)/install_packages -t $(System.JobName) -c $(ConfigFile) -s '$(IpkDir)'
      displayName: 'Install IPK files'
      workingDirectory: $(Agent.BuildDirectory)

    - checkout: EttusRTS
      path: ettus-rts
      displayName: 'Checkout ettus-rts'

    - download: x4xx-uhddev-oe-for-host-artifacts
      artifact: '$(UHDForHostArtifactName)'
      displayName: 'Download uhd artifact $(UHDForHostArtifactName)'

    - download: x4xx-gnuradio-oe-for-host-artifacts
      artifact: '$(UHDForHostArtifactName)'
      displayName: 'Download gnuradio artifact $(UHDForHostArtifactName)'

    - script: |
        cp x4xx-uhddev-oe-for-host-artifacts/$(UHDForHostArtifactName)/base-feeds.conf opkg.conf
        echo -e "arch all 1\narch core2-64 6\narch qemux86_64 11" >> opkg.conf
        rm -rf rootfs
        opkg -f opkg.conf -o rootfs update
        opkg -f opkg.conf -o rootfs install python3 python3-mprpc python3-numpy python3-pytest python3-rpyc python3-ruamel-yaml openssh gnuplot python3-gnuplotlib
        opkg -f opkg.conf -o rootfs install uhd python3-uhd uhd-examples uhd-tests
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Install UHD and Python dependencies on host'

    - script: |
        cp x4xx-gnuradio-oe-for-host-artifacts/$(UHDForHostArtifactName)/base-feeds.conf opkg_gnuradio.conf
        echo -e "arch all 1\narch core2-64 6\narch qemux86_64 11" >> opkg_gnuradio.conf
        opkg -f opkg_gnuradio.conf -o rootfs update && opkg -f opkg_gnuradio.conf -o rootfs install gnuradio libgnuradio-ettus3.8.0
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Install GNURadio on host'

    - script: |
        sleep 30
      displayName: 'Wait for device initialization'

    - template: steps_update_bitfile.yml

    - script: |
        $(ScriptDir)/update_sfp_ip -t $(System.JobName) -c $(ConfigFile)
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Update sfp IP addresses'

    - script: |
        PATH=$PATH:/usr/lib/uhd/examples/
        mkdir -p $PWD/rootfs/dev && touch $PWD/rootfs/dev/null
        mkdir -p $PWD/rootfs/home/nitest
        mkdir -p $PWD/rootfs/dev/shm
        ln -s ssh.openssh $PWD/rootfs/usr/bin/ssh
        echo "nitest:x:$UID:" >> $PWD/rootfs/etc/group
        echo "nitest:x:$UID:$UID:nitest,,,:/home/nitest:/bin/bash" >> $PWD/rootfs/etc/passwd
        cp -r $(Agent.BuildDirectory)/ettus-rts/config/remote/python_tests/. $PWD/rootfs
        linux-user-chroot --mount-bind /dev/shm /dev/shm $PWD/rootfs uhd_find_devices
        linux-user-chroot --mount-bind /dev/shm /dev/shm $PWD/rootfs /usr/bin/python3 automated_main.py --ats_config $(AtsConfig) --results_path 'ettus-rts-results'
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Run x4xx pytests on host'
      continueOnError: true

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/*.xml'
        testRunTitle: 'OSSTests'
        searchFolder: '$(Agent.BuildDirectory)/rootfs/ettus-rts-results'

    - script: |
        rm -rf usrp_test
        SOURCEDIR=$(Agent.BuildDirectory)/ettus-rts/config/remote
        EXECCMD="python3 automated_main.py --ats_config $(AtsConfig) --test_selector pytests/test_gnuradio_sanity.py --run_embedded"
        PYDEPS="--upgrade pytest pytest-helpers-namespace pytest-tempdir pytest-salt"
        $(ScriptDir)/run_test -t $(System.JobName) -c $(ConfigFile) -s $SOURCEDIR -p "$PYDEPS" -e "$EXECCMD" -f python_tests
        #      condition: and(succeeded(), contains(variables.Image_Url, 'gnuradio'))
      displayName: 'Run pytests on device'
      workingDirectory: $(Agent.BuildDirectory)
      continueOnError: true

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/*.xml'
        testRunTitle: 'EmbeddedTests'
        searchFolder: '$(Agent.BuildDirectory)/usrp_test/python_tests'

    - template: steps_run_poweroff.yml
    - template: steps_unmount_image.yml
