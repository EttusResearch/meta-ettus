# Helper template to handle checking out a git repository and specifying this
# as the EXTERNALSRC for the given list of packages.

parameters:
  # absolute path to the conf file to append to
  - name: conf_file
    type: string
  # The name of the repository to check out. 'self' is a special value that will use the triggered repository.
  # If 'self' selected, checkout must already have been done by calling yml to default path.
  - name: repository
    type: string
  # The list of packages to configure to use this repository to build
  - name: packages
    type: object
    default: []
  # Alternative to the above, used if the build should be run from a subdirectory of the repository
  - name: package_paths
    type: object
    default: []
  # Whether EXTERNALSRC_BUILD should be set as well
  - name: build_in_src
    type: boolean
    default: false

steps:
  - checkout: ${{ parameters.repository }}
    condition: and(succeeded(), ${{ ne(parameters.repository, 'self') }})

  # This script takes the repo name from azdo and strips
  # the leading strings before the last '/'. As an example if
  # $(Build.Repository.Name) = 'EttusResearch/uhddev'
  # the output will be 'uhddev'. This is used to determine
  # the path later in the checkout self case.
  - script: |
      echo "Repository name: $BUILD_REPO_NAME"
      build_repo_name_path=$(echo $BUILD_REPO_NAME | sed 's/.*\///')
      echo "Repository name path: $build_repo_name_path"
      echo "##vso[task.setvariable variable=buildRepoNamePath;isOutput=true;]$build_repo_name_path"
    condition: and(succeeded(), ${{ eq( parameters.repository, 'self' ) }})
    env:
      BUILD_REPO_NAME: $(Build.Repository.Name)
    name: getSelfPath
    displayName: Get Path to Self Repo

  - ${{ each pkg in parameters.packages }}:
    - template: oe_externalsrc.yml
      parameters:
        conf_file: ${{ parameters.conf_file }}
        package: ${{ pkg }}
        ${{ if eq( parameters.repository, 'self' ) }}:
          path: $(Build.SourcesDirectory)/$(getSelfPath.buildRepoNamePath)
        ${{ else }}:
          path: $(Build.SourcesDirectory)/${{ parameters.repository }}
        build_in_src: ${{ parameters.build_in_src }}

  - ${{ each pkg in parameters.package_paths }}:
    - template: oe_externalsrc.yml
      parameters:
        conf_file: ${{ parameters.conf_file }}
        package: ${{ pkg.package }}
        ${{ if eq( parameters.repository, 'self' ) }}:
          path: $(Build.SourcesDirectory)/$(getSelfPath.buildRepoNamePath)/${{ pkg.path }}
        ${{ else }}:
          path: $(Build.SourcesDirectory)/${{ parameters.repository }}/${{ pkg.path }}
        build_in_src: ${{ parameters.build_in_src }}
